# This is a basic workflow to help you get started with Actions

name: Q6_Chuzeville_Jules

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

permissions:
  contents: write

concurrency:
  group: push-to-${{ github.repository }}-${{ github.ref_name }}
  cancel-in-progress: false
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  create-archive-and-diff:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (with token)
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Generate Q6_archive_date and Q6_différences
        shell: bash
        run: |
          set -euo pipefail

          if [ ! -f Q6.java ]; then
            echo "Q6.java introuvable à la racine du dépôt." >&2
            exit 1
          fi

          DATE_STR=$(date +'%d-%m-%Y-%H%M%S')
          ARCHIVE_FILE="Q6_archive_date_${DATE_STR}.txt"

          CHAR_COUNT=$(wc -c < Q6.java | tr -d ' ')
          LINE_COUNT=$(wc -l < Q6.java | tr -d ' ')

          {
            echo "Nom et prénom : Jules Chuzeville"      # <-- change si besoin
            echo ""
            echo "Taille de Q6.java : ${CHAR_COUNT} caractères, ${LINE_COUNT} lignes"
            echo ""
            echo "Contenu de Q6.java :"
            echo "---------------------------------"
            cat Q6.java
            echo ""
            echo "---------------------------------"
          } > "${ARCHIVE_FILE}"

          mapfile -t FILES < <(ls -1 Q6_archive_date_*.txt 2>/dev/null || true)
          if [ ${#FILES[@]} -eq 0 ]; then
            PREV_FILE=""
          else
            # Construire "AAAAMMJJHHMMSS <nom>" puis trier
            TMP_SORT=$(mktemp)
            for f in "${FILES[@]}"; do
              # extraire  JJ-MM-AAAA-HHMMSS
              base="${f#Q6_archive_date_}"
              stamp="${base%.txt}"
              # JJ-MM-AAAA-HHMMSS -> AAAAMMJJHHMMSS
              YYYY=${stamp:6:4}
              MM=${stamp:3:2}
              DD=${stamp:0:2}
              HMS=${stamp:11:6}
              echo "${YYYY}${MM}${DD}${HMS} ${f}" >> "$TMP_SORT"
            done
            
            YYYY=$(date +%Y); MM=$(date +%m); DD=$(date +%d); HMS=$(date +%H%M%S)
            echo "${YYYY}${MM}${DD}${HMS} ${ARCHIVE_FILE}" >> "$TMP_SORT"

            mapfile -t SORTED < <(sort -n "$TMP_SORT" | awk '{print $2}')
            rm -f "$TMP_SORT"

            if [ ${#SORTED[@]} -ge 2 ]; then
              PREV_FILE="${SORTED[-2]}"
            else
              PREV_FILE=""
            fi
          fi

          DIFF_FILE="Q6_différences.txt"
          if [ -n "${PREV_FILE}" ] && [ -f "${PREV_FILE}" ]; then
            diff -u --label "${PREV_FILE}" --label "${ARCHIVE_FILE}" "${PREV_FILE}" "${ARCHIVE_FILE}" > "${DIFF_FILE}" || true
          else
            echo "Aucune archive précédente trouvée pour comparer avec ${ARCHIVE_FILE}." > "${DIFF_FILE}"
          fi

      - name: Configure Git identity
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Pull latest changes (avoid non-fast-forward)
        run: |
          git pull --rebase --autostash origin ${{ github.ref_name }} || true

      - name: Commit changes
        run: |
          git add Q6_archive_date_*.txt Q6_différences.txt
          git diff --cached --quiet && echo "Aucun changement à committer" && exit 0
          git commit -m "[skip ci] Add Q6 archive and differences"

      - name: Push changes
        run: |
          git push origin HEAD:${{ github.ref_name }}
